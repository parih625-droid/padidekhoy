// check-service.js
// Script to check what service is running on a port

const net = require('net');

const host = process.env.DB_HOST || 'localhost';
const port = process.env.DB_PORT || 2223;

console.log(`Connecting to ${host}:${port} to check what service is running...`);

const socket = new net.Socket();

const timeout = setTimeout(() => {
  console.log(`❌ Connection timeout - No response from ${host}:${port}`);
  process.exit(1);
}, 10000); // 10 second timeout

socket.connect(port, host, () => {
  clearTimeout(timeout);
  console.log(`✅ Connected to ${host}:${port}`);
  
  // Send a simple MySQL handshake packet to see if it responds
  const mysqlHandshake = Buffer.from([0x4a, 0x00, 0x00, 0x00, 0x0a, 0x38, 0x2e, 0x30, 0x2e, 0x33, 0x35, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x00]);
  
  socket.write(mysqlHandshake);
  
  socket.on('data', (data) => {
    console.log('Received data from server:');
    console.log(data.toString());
    socket.destroy();
    process.exit(0);
  });
});

socket.on('error', (err) => {
  clearTimeout(timeout);
  console.log(`❌ Connection failed - ${host}:${port}`);
  console.log(`Error: ${err.message}`);
  process.exit(1);
});